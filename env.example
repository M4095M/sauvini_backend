# Django Settings
SECRET_KEY=your-secret-key-here-change-in-production
DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# Database (DATABASE_URL takes precedence if set)
DATABASE_URL=postgresql://sauvini_user:sauvini_password@localhost:5432/sauvini_db
DB_NAME=sauvini_db
DB_USER=sauvini_user
DB_PASSWORD=sauvini_password
DB_HOST=localhost
DB_PORT=5432

# JWT Configuration (matching Rust backend)
JWT_SECRET=your-jwt-secret-here-change-in-production
JWT_ACCESS_TOKEN_EXPIRY=15
JWT_REFRESH_TOKEN_EXPIRY=10080

# Email Configuration (Brevo/Sendinblue)
# For Brevo (recommended): smtp-relay.brevo.com
# For Gmail: smtp.gmail.com
EMAIL_HOST=smtp-relay.brevo.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
# Brevo credentials: Get from https://app.brevo.com/settings/keys/api
# EMAIL_HOST_USER is your Brevo SMTP key (found in SMTP & API section)
EMAIL_HOST_USER=your-brevo-smtp-key
# EMAIL_HOST_PASSWORD is your Brevo SMTP password (found in SMTP & API section)
EMAIL_HOST_PASSWORD=your-brevo-smtp-password
# DEFAULT_FROM_EMAIL must match your verified sender email in Brevo
DEFAULT_FROM_EMAIL=your-verified-email@yourdomain.com
# Email timeout settings (in seconds) - prevents worker timeout
EMAIL_TIMEOUT=10
EMAIL_CONNECTION_TIMEOUT=5

# MinIO Configuration (matching Rust backend)
# Development (local MinIO)
AWS_ACCESS_KEY_ID=minioadmin
AWS_SECRET_ACCESS_KEY=minioadmin
AWS_STORAGE_BUCKET_NAME=sauvini
AWS_S3_ENDPOINT_URL=http://localhost:9000
AWS_S3_CUSTOM_DOMAIN=localhost:9000
STATIC_URL=

# MinIO Production Configuration
# ⚠️ IMPORTANT: Change these values in production!
# MINIO_ACCESS_KEY=your-secure-production-access-key
# MINIO_SECRET_KEY=your-secure-production-secret-key
# MINIO_ENDPOINT_URL=https://storage.yourdomain.com
# MINIO_STORAGE_BUCKET_NAME=sauvini
# MINIO_USE_HTTPS=True
# 
# For production, also update AWS_* variables to match:
# AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
# AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY}
# AWS_S3_ENDPOINT_URL=${MINIO_ENDPOINT_URL}
# AWS_S3_CUSTOM_DOMAIN=storage.yourdomain.com

# Redis Configuration (for caching)
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_CONNECTION_POOL_SIZE=10
REDIS_DEFAULT_CACHE_TTL_SECONDS=1800

# Server Configuration
SERVER_ADDRESS=0.0.0.0:4000

# Frontend URL (used in emails/links and automatically added to CORS if set)
# For production: https://sauvini-frontend.onrender.com
FRONTEND_URL=http://localhost:3000

# CORS/CSRF configuration (comma-separated; include scheme)
# If CORS_ALLOWED_ORIGINS is not set, FRONTEND_URL will be automatically added
# For production: https://sauvini-frontend.onrender.com
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
# If CSRF_TRUSTED_ORIGINS is not set, it defaults to CORS_ALLOWED_ORIGINS
CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# For production on Render, set these environment variables:
# ALLOWED_HOSTS=sauvini-backend.onrender.com,*.onrender.com
# FRONTEND_URL=https://sauvini-frontend.onrender.com
# CORS_ALLOWED_ORIGINS=https://sauvini-frontend.onrender.com
# CSRF_TRUSTED_ORIGINS=https://sauvini-frontend.onrender.com

# Security settings for production
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True
SECURE_SSL_REDIRECT=True
USE_PROXY_SSL_HEADER=True
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True
