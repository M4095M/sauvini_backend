# Generated by Django 5.2.7 on 2025-10-17 14:47

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0002_chapter_academic_streams'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('original_name', models.CharField(max_length=255)),
                ('file_path', models.CharField(max_length=500, unique=True)),
                ('file_type', models.CharField(choices=[('video', 'Video'), ('pdf', 'PDF'), ('document', 'Document'), ('image', 'Image'), ('audio', 'Audio')], max_length=20)),
                ('file_size', models.BigIntegerField()),
                ('mime_type', models.CharField(max_length=100)),
                ('access_level', models.CharField(choices=[('public', 'Public'), ('student', 'Student Only'), ('professor', 'Professor Only'), ('admin', 'Admin Only')], default='student', max_length=20)),
                ('is_encrypted', models.BooleanField(default=False)),
                ('encryption_key', models.CharField(blank=True, max_length=255, null=True)),
                ('checksum', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('allow_download', models.BooleanField(default=True)),
                ('allow_streaming', models.BooleanField(default=True)),
                ('max_downloads', models.IntegerField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.chapter')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.module')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.lesson')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'secure_files',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FileAccess',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('access_type', models.CharField(choices=[('read', 'Read'), ('download', 'Download'), ('stream', 'Stream'), ('edit', 'Edit')], default='read', max_length=20)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('access_count', models.IntegerField(default=0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesses', to='files.file')),
                ('granted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_accesses', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_accesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'file_accesses',
            },
        ),
        migrations.CreateModel(
            name='FileAccessLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('view', 'View'), ('download', 'Download'), ('stream', 'Stream'), ('upload', 'Upload'), ('delete', 'Delete')], max_length=20)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('referer', models.URLField(blank=True, null=True)),
                ('success', models.BooleanField()),
                ('error_message', models.TextField(blank=True, null=True)),
                ('response_code', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('duration_ms', models.IntegerField(blank=True, null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='files.file')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_access_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'file_access_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='FileUploadSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('file_type', models.CharField(choices=[('video', 'Video'), ('pdf', 'PDF'), ('document', 'Document'), ('image', 'Image'), ('audio', 'Audio')], max_length=20)),
                ('mime_type', models.CharField(max_length=100)),
                ('upload_token', models.CharField(max_length=255, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('uploading', 'Uploading'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('uploaded_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='files.file')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upload_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'file_upload_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['file_type'], name='secure_file_file_ty_45f8d9_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['access_level'], name='secure_file_access__56761d_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['uploaded_by'], name='secure_file_uploade_845877_idx'),
        ),
        migrations.AddIndex(
            model_name='file',
            index=models.Index(fields=['created_at'], name='secure_file_created_67c42a_idx'),
        ),
        migrations.AddIndex(
            model_name='fileaccess',
            index=models.Index(fields=['file', 'user'], name='file_access_file_id_d5da1c_idx'),
        ),
        migrations.AddIndex(
            model_name='fileaccess',
            index=models.Index(fields=['expires_at'], name='file_access_expires_376a84_idx'),
        ),
        migrations.AddIndex(
            model_name='fileaccess',
            index=models.Index(fields=['granted_at'], name='file_access_granted_cc074b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='fileaccess',
            unique_together={('file', 'user', 'access_type')},
        ),
        migrations.AddIndex(
            model_name='fileaccesslog',
            index=models.Index(fields=['file', 'user'], name='file_access_file_id_d7d22a_idx'),
        ),
        migrations.AddIndex(
            model_name='fileaccesslog',
            index=models.Index(fields=['timestamp'], name='file_access_timesta_59df46_idx'),
        ),
        migrations.AddIndex(
            model_name='fileaccesslog',
            index=models.Index(fields=['ip_address'], name='file_access_ip_addr_12bc91_idx'),
        ),
        migrations.AddIndex(
            model_name='fileaccesslog',
            index=models.Index(fields=['success'], name='file_access_success_2c31c8_idx'),
        ),
        migrations.AddIndex(
            model_name='fileuploadsession',
            index=models.Index(fields=['user'], name='file_upload_user_id_27eb97_idx'),
        ),
        migrations.AddIndex(
            model_name='fileuploadsession',
            index=models.Index(fields=['upload_token'], name='file_upload_upload__83d78c_idx'),
        ),
        migrations.AddIndex(
            model_name='fileuploadsession',
            index=models.Index(fields=['status'], name='file_upload_status_e68f27_idx'),
        ),
        migrations.AddIndex(
            model_name='fileuploadsession',
            index=models.Index(fields=['expires_at'], name='file_upload_expires_e6ef1d_idx'),
        ),
    ]
